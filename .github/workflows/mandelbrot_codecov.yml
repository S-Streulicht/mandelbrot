# ------------------------------------------------------------------------------
#  Copyright Christopher Kormanyos 2022.
#  Distributed under the Boost Software License,
#  Version 1.0. (See accompanying file LICENSE_1_0.txt
#  or copy at http://www.boost.org/LICENSE_1_0.txt)
# ------------------------------------------------------------------------------

name: mandelbrot_codecov
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  gcc-gcov-native:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++14 ]
        compiler: [ g++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install lcov
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/config
          git submodule update --init libs/multiprecision
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-gcov-native
        run: |
          echo "query GCC version"
          g++ -v
          echo "build libjpeg-6b.a"
          cd jpeg
          make all
          cd ..
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "build and run gcov/lcov/genhtml"
          ${{ matrix.compiler }} -x c++ -c -mtune=native -march=native -O2 -Wall -Wextra -std=${{ matrix.standard }} -fno-inline-functions -fprofile-arcs -ftest-coverage -DMANDELBROT_HAS_COVERAGE -I. -I../boost-root -Ijpeg/jpeg-6b-2022 -pthread test/test_mandelbrot.cpp -o test_mandelbrot.o
          ${{ matrix.compiler }} -mtune=native -march=native -O2 -Wall -Wextra -std=${{ matrix.standard }} -fno-inline-functions -fprofile-arcs -ftest-coverage test_mandelbrot.o -lpthread -ljpeg-6b -Ljpeg/jpeg-6b-2022/obj -o test_mandelbrot.exe
          ./test_mandelbrot.exe
          gcov --all-blocks --branch-counts --branch-probabilities --function-summaries --unconditional-branches --object-directory . --demangled-names ./test_mandelbrot.cpp
          lcov --rc lcov_branch_coverage=1 -c --directory . --output-file coverage_unfiltered.info
          lcov --rc lcov_branch_coverage=1 --remove coverage_unfiltered.info '/usr/*' '*boost/*' --output-file coverage.info
          genhtml coverage.info --rc lcov_branch_coverage=1 --demangle-cpp --output-directory report
